

Bloque 1

/*
tarea2.c
Trabajo con llamadas al sistema del Sistema de Archivos ''POSIX 2.10

Bloque 2

 compliant''
*/

#include<unistd.h>  /* POSIX Standard: 2.10 Symbolic Constants 

Bloque 3

<unistd.h>
		     */
#include<stdio.h>
#include<stdlib.h>
#include<sys/types.h> 

Bloque 4

 /* Primitive system data types for abstraction	\
			   of implementation-depend

Bloque 5

ent data types.
			   POSIX Standard: 2.6 Primitive System Data Types
			   <sys

Bloque 6

/types.h>
		       */
#include<sys/stat.h>
#include<stdio.h>
#include<errno.h>
#

Bloque 7

include<string.h>

int main(int argc, char *argv[])
{
int i;
struct stat atribut

Bloque 8

os;
char tipoArchivo[30];

if(argc<2) {
	printf("\nSintaxis de ejecucion: tarea2

Bloque 9

 [<nombre_archivo>]+\n\n");
	exit(EXIT_FAILURE);
}
for(i=1;i<argc;i++) {
	printf

Bloque 10

("%s: ", argv[i]);
	if(lstat(argv[i],&atributos) < 0) {
		printf("\nError al int

Bloque 11

entar acceder a los atributos de %s",argv[i]);
		perror("\nError en lstat");
	}


Bloque 12

	else {
		if(S_ISREG(atributos.st_mode)) strcpy(tipoArchivo,"Regular");
		else i

Bloque 13

f(S_ISDIR(atributos.st_mode)) strcpy(tipoArchivo,"Directorio");
		else if(S_ISCH

Bloque 14

R(atributos.st_mode)) strcpy(tipoArchivo,"Especial de caracteres");
		else if(S_

Bloque 15

ISBLK(atributos.st_mode)) strcpy(tipoArchivo,"Especial de bloques");
		else if(S

Bloque 16

_ISFIFO(atributos.st_mode)) strcpy(tipoArchivo,"Tuberia con nombre (FIFO)");
		e

Bloque 17

lse if(S_ISLNK(atributos.st_mode)) strcpy(tipoArchivo,"Enlace relativo (soft)");

Bloque 18


		else if(S_ISSOCK(atributos.st_mode)) strcpy(tipoArchivo,"Socket");
		else str

Bloque 19

cpy(tipoArchivo,"Tipo de archivo desconocido");
		printf("%s\n",tipoArchivo);
	}

Bloque 20


}

return EXIT_SUCCESS;
}
